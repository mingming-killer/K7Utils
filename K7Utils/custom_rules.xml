<?xml version="1.0" encoding="UTF-8"?>
<project name="K7Utils_build_rules" default="debug">
    <property name="custom.project.dir" value="${source.absolute.dir}/.." />
    <property name="custom.out.lib.dir" value="${custom.project.dir}/../../../libout" />
    <property name="custom.input.dir" value="${custom.project.dir}/input" />
    <property name="custom.input.lib.dir" value="${custom.project.dir}/libs" />

    <!-- I don't why cant's get ${out.absolute.dir} value, so I have to set the path myself. -->
    <property name="custom.out.dir" value="${custom.project.dir}/bin" />

    <!-- TODO: put your depend libarary files here -->
    <!--
    <property name="custom.input.jar.file.1" value="K7Utils.jar" />
    -->

    <property name="custom.out.lib.jar.file" value="${ant.project.name}.jar" />
    <property name="custom.out.lib.source.jar.file" value="${custom.out.dir}/${ant.project.name}-source.jar" />
    <property name="custom.out.lib.source.jar.properties.flie" value="${custom.input.dir}/${custom.out.lib.jar.file}.properties" />


    <!-- custom clean -->
    <target name="custom-clean" depends="clean" description="do custom-clean">
        <echo>delete depend libs ...</echo>

	    <!-- delete depend libs directory -->
        <delete dir="${custom.input.lib.dir}"/>
   	</target>


    <!-- bbk hack first task -->
    <target name="-pre-bbk-init" description="do pre-bbk-init">
	    <!-- delete depend libs directory -->
        <delete dir="${custom.input.lib.dir}"/>

	    <!-- create depend libs directory -->
		<mkdir dir="${custom.input.lib.dir}" />

	    <!-- create out put directory -->
		<mkdir dir="${custom.out.dir}" />

		<!-- copy some depend library to libs -->
   	</target>
 

    <!-- before clean -->
    <target name="-pre-clean" description="do pre-clean">
	    <!-- delete depend libs directory -->
        <!--
        <delete dir="${custom.input.lib.dir}"/>
        -->
   	</target>
 

    <!-- before compile -->
    <target name="-pre-build" description="do pre-build">
        <!-- do noting -->
   	</target>
		
    	
    <!-- after compile -->
    <target name="-post-compile" description="do post-compile">
		<!-- package jar libraray -->
		<jar destfile="${out.library.jar.file}">
	  	<fileset dir="${out.classes.absolute.dir}" 
	  		includes="**/*.class" 
        	excludes="${project.app.package.path}/R.class ${project.app.package.path}/R$*.class ${project.app.package.path}/BuildConfig.class"/>
            <fileset dir="${source.absolute.dir}" excludes="**/*.java ${android.package.excludes}" />
	        <fileset dir="${asset.absolute.dir}/.." includes="assets/*.*" />
		</jar>

        <!-- package jar libraray source -->
		<jar destfile="${custom.out.lib.source.jar.file}">
	  	<fileset dir="${source.absolute.dir}" 
	  		includes="**/*.java" 
        	excludes="${project.app.package.path}/R.java ${project.app.package.path}/R$*.java ${project.app.package.path}/BuildConfig.java"/>
		</jar>
	    	
		<!-- creat out put path -->
		<mkdir dir="${custom.out.lib.dir}" />

        <!-- copy target file to output path -->
        <copy file="${out.library.jar.file}" tofile="${custom.out.lib.dir}/${custom.out.lib.jar.file}" />
        <copy file="${out.library.jar.file}" tofile="${custom.out.dir}/${custom.out.lib.jar.file}" />
        <copy file="${custom.out.lib.source.jar.file}" todir="${custom.out.lib.dir}" />
        <copy file="${custom.out.lib.source.jar.properties.flie}" todir="${custom.out.lib.dir}" />
	</target>


    <!-- package source jar -->
    <target name="pkg-src" description="do pakge source jar">
        <!-- package jar libraray source -->
		<jar destfile="${custom.out.lib.source.jar.file}">
	  	<fileset dir="${source.absolute.dir}" 
	  		includes="**/*.java" 
        	excludes="${project.app.package.path}/R.java ${project.app.package.path}/R$*.java ${project.app.package.path}/BuildConfig.java"/>
		</jar>

	    	
		<!-- creat out put path -->
		<mkdir dir="${custom.out.lib.dir}" />
        
        <!-- copy target file to output path -->
        <copy file="${custom.out.lib.source.jar.file}" todir="${custom.out.lib.dir}" />
        <copy file="${custom.out.lib.source.jar.properties.flie}" todir="${custom.out.lib.dir}" />
	</target>


</project>
